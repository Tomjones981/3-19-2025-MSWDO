import Swal from "sweetalert2";
import React, { useState } from "react";
import { BeatLoader } from "react-spinners";
import axiosClient from "../../api/axiosClient";
import MailIcon from '@mui/icons-material/Mail';
import FolderIcon from '@mui/icons-material/Folder';
import Logo from "../../assets/images/mswd_logo.png";
import DashboardIcon from '@mui/icons-material/Dashboard';
import { useStateContext } from "../../context/ContextProvider";
import { NavLink, Navigate, Outlet, useNavigate } from "react-router-dom";
import { Menu, Logout as LogoutIcon, PieChartOutlined, Assignment, ExpandLess, ExpandMore, ShoppingBagOutlined, DashboardOutlined, GroupOutlined, ChevronRight, VerifiedUserRounded } from "@mui/icons-material";
import { Avatar, DarkThemeToggle, Flowbite, } from "flowbite-react"; import LoadingScreen from "../components/LoadingScreen";
import { FaUsers, FaRegCalendarCheck, FaChalkboardTeacher, FaHandHoldingUsd, FaProjectDiagram } from "react-icons/fa";
import { Card, Typography, List, ListItem, ListItemPrefix, ListItemSuffix, Chip, Accordion, AccordionHeader, AccordionBody, Alert } from "@material-tailwind/react";

const DefaultLayout = () => {
  const { user, token, setUser, setToken, loading } = useStateContext();
  const [loadingLogout, setLoadingLogout] = useState(false);
  const [activeItem, setActiveItem] = useState("");
  const [sidebarState, setSidebarState] = useState({
    departmentOpen: false,
    facultyOpen: false,
    scheduleOpen: false,
    attendanceOpen: false,
    workloadOpen: false,
    degreeOpen: false,
    payrollOpen: false,
    calculationsOpen: false,
  }); 
  const navigate = useNavigate();

  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  const [open, setOpen] = React.useState(0); 
  const handleOpen = (value) => {
    setOpen(open === value ? 0 : value);
  };
 

  const onLogout = async (ev) => {
    ev.preventDefault();
    setLoadingLogout(true);

    const result = await Swal.fire({
      title: "Are you sure?",
      text: "You will be logged out!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, logout!",
    });

    if (!result.isConfirmed) {
      setLoadingLogout(false);
      return;
    }

    try {
      await axiosClient.post("/logout", {}, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      setUser(null);
      setToken(null);
      localStorage.removeItem("token");

      Swal.fire({
        icon: "success",
        title: "Logged out!",
        text: "You have been successfully logged out.",
        showConfirmButton: false,
        timer: 1500,
      }).then(() => {
        navigate("/login");
        window.location.reload();
      });
    } catch (error) {
      console.error("Logout failed:", error.response?.data || error.message);

      Swal.fire({
        icon: "error",
        title: "Logout failed!",
        text: "Please try again.",
      });
    } finally {
      setLoadingLogout(false);
    }
  }; 

  const renderAdminSidebar = () => (
    <>
      <main className="flex">
        {/* <Card className="fixed top-0 w-full h-16   z-10 flex  p-4 bg-white text-white shadow-md dark:bg-gray-900 ">
          <div className="ml-4 mb-4 flex items-center justify-between">
            <div className="flex items-center gap-2">
              <img src={Logo} alt="MSWDO Logo" className="h-10 w-10 rounded-full" />
              <Typography variant="h5" color="blue-gray" className="font-bold text-gray-800 dark:text-gray-200">
                MSWDO
              </Typography>
            </div>
            <DarkThemeToggle />
          </div>
        </Card> */}
        <Card className="fixed h-screen w-full max-w-[15rem] p-4 shadow-xl shadow-blue-gray-900/5 dark:bg-gray-900 dark:text-gray-200">
           
          <div className="ml-4 mb-4 flex items-center justify-between">
            <div className="flex items-center gap-2">
              <img src={Logo} alt="MSWDO Logo" className="h-10 w-10 rounded-full" />
              <Typography variant="h5" color="blue-gray" className="font-bold ">
                MSWDO
              </Typography>
            </div>
            <DarkThemeToggle />
          </div>
          <hr className="my-2 border-blue-gray-50" />
    
          <List> 
            <div className="bg-red-900 text-gray-200 border border-gray-200 rounded-md dark:text-gray-800 dark:bg-red-200">
              <Accordion
                open={open === 1}
                icon={
                  <ExpandMore
                    className={`mx-auto h-4 w-4 transition-transform ${
                      open === 1 ? "rotate-180" : ""
                    }`}
                  />
                }
              >
              <ListItem className="p-0" selected={open === 1}>
                <AccordionHeader onClick={() => handleOpen(1)} className="border-b-0 p-3">
                  <ListItemPrefix>
                    <DashboardIcon />
                  </ListItemPrefix>
                  <Typography color="blue-gray" className=" font-normal">
                    Dashboard
                  </Typography>
                </AccordionHeader>
              </ListItem>
              <AccordionBody className="py-1">
                <List className="p-0 text-gray-300 dark:text-gray-700">
                  <ListItem className="">
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Analytics
                  </ListItem>
                  <ListItem>
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Reporting
                  </ListItem>
                  <ListItem>
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Projects
                  </ListItem>
                </List>
              </AccordionBody>
            </Accordion>
    
            <Accordion
              open={open === 2}
              icon={
                <ExpandMore
                  className={`mx-auto h-4 w-4 transition-transform ${
                    open === 2 ? "rotate-180" : ""
                  }`}
                />
              }
            >
              <ListItem className="p-0" selected={open === 2}>
                <AccordionHeader onClick={() => handleOpen(2)} className="border-b-0 p-3">
                  <ListItemPrefix>
                    <div className="text-2xl">
                      <FaUsers />
                    </div>
                  </ListItemPrefix>
                  <Typography color="blue-gray" className="ml-[-3rem] font-normal">
                    Users
                  </Typography>
                </AccordionHeader>
              </ListItem>
              <AccordionBody className="py-1">
                <List className="p-0 text-gray-300 dark:text-gray-700">
                  <ListItem>
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Orders
                  </ListItem>
                  <ListItem>
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Products
                  </ListItem>
                </List>
              </AccordionBody>
            </Accordion>
    
            <Accordion
              open={open === 3}
              icon={
                <ExpandMore
                  className={`mx-auto h-4 w-4 transition-transform ${
                    open === 3 ? "rotate-180" : ""
                  }`}
                />
              }
            >
              <ListItem className="p-0" selected={open === 3}>
                <AccordionHeader onClick={() => handleOpen(3)} className="border-b-0 p-3">
                  <ListItemPrefix>
                    <div className="text-2xl">
                      <FolderIcon />
                    </div>
                  </ListItemPrefix>
                  <Typography color="blue-gray" className=" font-normal">
                    Documents
                  </Typography>
                </AccordionHeader>
              </ListItem>
              <AccordionBody className="py-1">
                <List className="p-0 text-gray-300 dark:text-gray-700">
                  <ListItem>
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Barangay
                  </ListItem>
                  <ListItem>
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Files
                  </ListItem>
                </List>
              </AccordionBody>
            </Accordion>
            </div>
     
            <hr className="my-2 border-blue-gray-50" />
            <ListItem>
              <NavLink to="/admin/dashboard" className={({ isActive }) => `flex items-center w-full ${isActive ? "text-blue-500" : "text-gray-700"}` } >
                <ListItemPrefix>
                  <MailIcon />
                </ListItemPrefix>
                  Inbox
                <ListItemSuffix>
                  <Chip value="14" size="sm" variant="ghost" color="blue-gray" className="rounded-full" />
                </ListItemSuffix>
              </NavLink> 
            </ListItem>
     
            <ListItem>
              <ListItemPrefix>
                <Avatar />
              </ListItemPrefix>
              Profile
            </ListItem>
            <ListItem>
              <ListItemPrefix>
                <Assignment />
              </ListItemPrefix>
              Settings
            </ListItem>
     
            <ListItem>
              <ListItemPrefix>
                <LogoutIcon />
              </ListItemPrefix>
              Log Out
            </ListItem>
          </List> 
        </Card> 
      </main>
    </>
  );

  
  const renderStaffSidebar = () => (
    <>
      <main className="flex"> 
        <Card className="fixed h-screen w-full max-w-[15rem] p-4 shadow-xl shadow-blue-gray-900/5 dark:bg-gray-900 dark:text-gray-200">
        
          <div className="ml-4 mb-4 flex items-center justify-between">
            <div className="flex items-center gap-2">
              <img src={Logo} alt="MSWDO Logo" className="h-10 w-10 rounded-full" />
              <Typography variant="h5" color="blue-gray" className="font-bold">
                MSWDO
              </Typography>
            </div>
            <DarkThemeToggle />
          </div>
          <hr className="my-2 border-blue-gray-50" />
    
          <List> 
            <div className="bg-red-900 text-gray-200 border border-gray-200 rounded-md dark:text-gray-800 dark:bg-red-200">
            <Accordion
              open={open === 1}
              icon={
                <ExpandMore
                  className={`mx-auto h-4 w-4 transition-transform ${
                    open === 1 ? "rotate-180" : ""
                  }`}
                />
              }
            >
              <ListItem className="p-0" selected={open === 1}>
                <AccordionHeader onClick={() => handleOpen(1)} className="border-b-0 p-3">
                  <ListItemPrefix>
                    <DashboardIcon />
                  </ListItemPrefix>
                  <Typography color="blue-gray" className=" font-normal">
                    Dashboard
                  </Typography>
                </AccordionHeader>
              </ListItem>
              <AccordionBody className="py-1">
                <List className="p-0 text-gray-300 dark:text-gray-700">
                  <ListItem className="">
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Analytics
                  </ListItem>
                  <ListItem>
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Reporting
                  </ListItem>
                  <ListItem>
                    <ListItemPrefix>
                      <ChevronRight />
                    </ListItemPrefix>
                    Projects
                  </ListItem>
                </List>
              </AccordionBody>
            </Accordion>
      
            </div>
     
            <hr className="my-2 border-blue-gray-50" />
            <ListItem>
              <NavLink to="/admin/dashboard" className={({ isActive }) => `flex items-center w-full ${isActive ? "text-blue-500" : "text-gray-700"}` } >
                <ListItemPrefix>
                  <MailIcon />
                </ListItemPrefix>
                  Inbox
                <ListItemSuffix>
                  <Chip value="14" size="sm" variant="ghost" color="blue-gray" className="rounded-full" />
                </ListItemSuffix>
              </NavLink>
              
            </ListItem>
     
            <ListItem>
              <ListItemPrefix>
                <Avatar />
              </ListItemPrefix>
              Profile
            </ListItem>
            <ListItem>
              <ListItemPrefix>
                <Assignment />
              </ListItemPrefix>
              Settings
            </ListItem>
     
            <ListItem>
              <ListItemPrefix>
                <LogoutIcon />
              </ListItemPrefix>
              Log Out
            </ListItem>
          </List> 
        </Card> 
      </main>
    </>
  );
  

  return (
    <div>
      {user?.user_type === "admin" 
        ? renderAdminSidebar() 
        : user?.user_type === "payroll" 
          ? renderStaffSidebar() 
          : user?.user_type === "customer" 
            ? renderCustomerSidebar() 
            : null  }
      <div className="ml-[15rem] mb-20 flex-1 p-6">
        <div className="container mx-auto">
          <Outlet />
        </div>
      </div>
    </div>
  );
};

export default DefaultLayout;
